export class ControlBinder {
    static setUpSubscriptions(options, control) {
        if (options.disabled) {
            options.disabled.subscribe(state => ControlBinder.disabledCallback(state, control));
        }
        if (options.valueOverride) {
            options.valueOverride.subscribe(state => ControlBinder.valueOverrideCallback(state, control));
        }
    }
    static disabledCallback(formDisable, control) {
        const isBoolean = typeof formDisable === 'boolean';
        const state = isBoolean ? formDisable : formDisable.enabled;
        if (control.disabled !== state) {
            (state ? control.disable : control.enable).bind(control)(isBoolean ? undefined : formDisable);
        }
    }
    static valueOverrideCallback(override, control) {
        control.setValue(override.value, override.options);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC1iaW5kZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9nci1mb3Jtcy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sLWJpbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQWdCLGFBQWE7SUFFMUIsTUFBTSxDQUFDLGtCQUFrQixDQUM5QixPQUEwRixFQUMxRixPQUE0QztRQUU1QyxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7WUFDcEIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDckY7UUFDRCxJQUFJLE9BQU8sQ0FBQyxhQUFhLEVBQUU7WUFDekIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDL0Y7SUFDSCxDQUFDO0lBRU8sTUFBTSxDQUFDLGdCQUFnQixDQUFDLFdBQXdCLEVBQUUsT0FBNEM7UUFDcEcsTUFBTSxTQUFTLEdBQUcsT0FBTyxXQUFXLEtBQUssU0FBUyxDQUFDO1FBQ25ELE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxXQUFrQyxDQUFDLE9BQU8sQ0FBQztRQUNwRixJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssS0FBSyxFQUFFO1lBQzlCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxXQUFpQyxDQUFDLENBQUM7U0FDckg7SUFDSCxDQUFDO0lBRU8sTUFBTSxDQUFDLHFCQUFxQixDQUFDLFFBQXVCLEVBQUUsT0FBNEM7UUFDeEcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNyRCxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBGb3JtQXJyYXksIEZvcm1Db250cm9sLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge0Zvcm1EaXNhYmxlLCBGb3JtRGlzYWJsZU9wdGlvbnMsIFZhbHVlT3ZlcnJpZGV9IGZyb20gJy4vYnVpbGQtbW9kZWxzL2Fic3RyYWN0JztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENvbnRyb2xCaW5kZXIge1xuXG4gIHB1YmxpYyBzdGF0aWMgc2V0VXBTdWJzY3JpcHRpb25zKFxuICAgIG9wdGlvbnM6IHsgZGlzYWJsZWQ/OiBPYnNlcnZhYmxlPEZvcm1EaXNhYmxlPiwgdmFsdWVPdmVycmlkZT86IE9ic2VydmFibGU8VmFsdWVPdmVycmlkZT4gfSxcbiAgICBjb250cm9sOiBGb3JtQXJyYXkgfCBGb3JtR3JvdXAgfCBGb3JtQ29udHJvbFxuICApIHtcbiAgICBpZiAob3B0aW9ucy5kaXNhYmxlZCkge1xuICAgICAgb3B0aW9ucy5kaXNhYmxlZC5zdWJzY3JpYmUoc3RhdGUgPT4gQ29udHJvbEJpbmRlci5kaXNhYmxlZENhbGxiYWNrKHN0YXRlLCBjb250cm9sKSk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnZhbHVlT3ZlcnJpZGUpIHtcbiAgICAgIG9wdGlvbnMudmFsdWVPdmVycmlkZS5zdWJzY3JpYmUoc3RhdGUgPT4gQ29udHJvbEJpbmRlci52YWx1ZU92ZXJyaWRlQ2FsbGJhY2soc3RhdGUsIGNvbnRyb2wpKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBkaXNhYmxlZENhbGxiYWNrKGZvcm1EaXNhYmxlOiBGb3JtRGlzYWJsZSwgY29udHJvbDogRm9ybUFycmF5IHwgRm9ybUdyb3VwIHwgRm9ybUNvbnRyb2wpOiB2b2lkIHtcbiAgICBjb25zdCBpc0Jvb2xlYW4gPSB0eXBlb2YgZm9ybURpc2FibGUgPT09ICdib29sZWFuJztcbiAgICBjb25zdCBzdGF0ZSA9IGlzQm9vbGVhbiA/IGZvcm1EaXNhYmxlIDogKGZvcm1EaXNhYmxlIGFzIEZvcm1EaXNhYmxlT3B0aW9ucykuZW5hYmxlZDtcbiAgICBpZiAoY29udHJvbC5kaXNhYmxlZCAhPT0gc3RhdGUpIHtcbiAgICAgIChzdGF0ZSA/IGNvbnRyb2wuZGlzYWJsZSA6IGNvbnRyb2wuZW5hYmxlKS5iaW5kKGNvbnRyb2wpKGlzQm9vbGVhbiA/IHVuZGVmaW5lZCA6IGZvcm1EaXNhYmxlIGFzIEZvcm1EaXNhYmxlT3B0aW9ucyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgdmFsdWVPdmVycmlkZUNhbGxiYWNrKG92ZXJyaWRlOiBWYWx1ZU92ZXJyaWRlLCBjb250cm9sOiBGb3JtQXJyYXkgfCBGb3JtR3JvdXAgfCBGb3JtQ29udHJvbCk6IHZvaWQge1xuICAgIGNvbnRyb2wuc2V0VmFsdWUob3ZlcnJpZGUudmFsdWUsIG92ZXJyaWRlLm9wdGlvbnMpO1xuICB9XG5cbn1cbiJdfQ==