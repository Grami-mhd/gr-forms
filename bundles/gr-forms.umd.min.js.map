{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://gr-forms/lib/control-binder.ts","ng://gr-forms/lib/build-models/abstract.ts","ng://gr-forms/lib/build-models/control.ts","ng://gr-forms/lib/typed-forms/gr-form-array.ts","ng://gr-forms/lib/build-models/array.ts","ng://gr-forms/lib/typed-forms/gr-form-group.ts","ng://gr-forms/lib/build-models/group.ts","ng://gr-forms/lib/gr-builder.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","ControlBinder","setUpSubscriptions","options","control","disabled","subscribe","state","disabledCallback","valueOverride","valueOverrideCallback","formDisable","isBoolean","enabled","disable","enable","bind","undefined","override","setValue","validators","asyncValidators","disabler","valueOverrider","GrControl","_this","_super","buildControl","FormControl","GrAbstract","GrFormArray","defineProperty","controls","FormArray","GrArray","array","buildArray","GrFormGroup","FormGroup","GrGroup","group","buildGroup","GrBuilder","valuesSubject","Subject","asObservable","pipe","distinctUntilChanged","isEqual","buildForm","data","form","recursiveBuild","valueChanges","values","createSelector","projector","values$","map","hasInstance","item","controls_1","keys","forEach","key","isArray","controls_2"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Observable } from 'rxjs';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport {FormDisable, FormDisableOptions, ValueOverride} from './build-models/abstract';\n\nexport abstract class ControlBinder {\n\n  public static setUpSubscriptions(\n    options: { disabled?: Observable<FormDisable>, valueOverride?: Observable<ValueOverride> },\n    control: FormArray | FormGroup | FormControl\n  ) {\n    if (options.disabled) {\n      options.disabled.subscribe(state => ControlBinder.disabledCallback(state, control));\n    }\n    if (options.valueOverride) {\n      options.valueOverride.subscribe(state => ControlBinder.valueOverrideCallback(state, control));\n    }\n  }\n\n  private static disabledCallback(formDisable: FormDisable, control: FormArray | FormGroup | FormControl): void {\n    const isBoolean = typeof formDisable === 'boolean';\n    const state = isBoolean ? formDisable : (formDisable as FormDisableOptions).enabled;\n    if (control.disabled !== state) {\n      (state ? control.disable : control.enable).bind(control)(isBoolean ? undefined : formDisable as FormDisableOptions);\n    }\n  }\n\n  private static valueOverrideCallback(override: ValueOverride, control: FormArray | FormGroup | FormControl): void {\n    control.setValue(override.value, override.options);\n  }\n\n}\n","import {AbstractControlOptions, AsyncValidatorFn, ValidatorFn} from '@angular/forms';\nimport {Observable} from 'rxjs';\n\nexport type FormValidators = ValidatorFn | ValidatorFn[] | AbstractControlOptions | null;\nexport type AsyncFormValidators = AsyncValidatorFn | AsyncValidatorFn[] | null;\n\nexport interface FormDisableOptions {\n  enabled: boolean;\n  onlySelf?: boolean;\n  emitEvent?: boolean;\n}\nexport type FormDisable = boolean | FormDisableOptions;\n\n\nexport interface ValueOverride {\n  value: any;\n  options?: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n    emitModelToViewChange?: boolean;\n    emitViewToModelChange?: boolean;\n  };\n}\n\nexport interface Options {\n  validators?: FormValidators;\n  asyncValidators?: AsyncFormValidators;\n  disabler?: Observable<FormDisable>;\n  valueOverrider?: Observable<ValueOverride>;\n}\n\nexport abstract class GrAbstract {\n  protected readonly validators: FormValidators;\n  protected readonly asyncValidators: AsyncFormValidators;\n  protected readonly disabled: Observable<FormDisable>;\n  protected readonly valueOverride: Observable<ValueOverride>;\n\n  public constructor(options: Options) {\n    this.validators = options ? options.validators : [];\n    this.asyncValidators = options ? options.asyncValidators : [];\n    this.disabled = options ? options.disabler : null;\n    this.valueOverride = options ? options.valueOverrider : null;\n  }\n}\n","import {FormControl} from '@angular/forms';\nimport {ControlBinder} from '../control-binder';\nimport {GrAbstract, Options} from './abstract';\n\nexport class GrControl extends GrAbstract {\n  public constructor(public readonly value: any, options?: Options) {\n    super(options);\n  }\n\n  public buildControl(): FormControl {\n    const control = new FormControl(this.value || null, this.validators, this.asyncValidators);\n    ControlBinder.setUpSubscriptions(\n      {\n        disabled: this.disabled,\n        valueOverride: this.valueOverride\n      },\n      control\n    );\n    return control;\n  }\n}\n","import {AbstractControl, FormArray} from '@angular/forms';\n\n/**\n * GrFormArray\n * an angular FormArray class that provides strong typed getters for controls and value\n */\nexport class GrFormArray<ControlType extends AbstractControl, ValueType extends any = any> extends FormArray {\n\n  /**\n   * same as FormArray.controls with better type safety\n   */\n  public get grControls(): ControlType[] {\n    return this.controls as ControlType[]\n  }\n\n  /**\n   * same as FormArray.value with better type safety\n   */\n  public get grValue(): ValueType[] {\n    return this.value;\n  }\n\n}\n","import {AbstractControl} from '@angular/forms';\nimport {GrFormArray} from '../typed-forms/gr-form-array';\nimport {ControlBinder} from '../control-binder';\nimport {GrAbstract, Options} from './abstract';\n\nexport class GrArray extends GrAbstract {\n  public constructor(\n    public readonly array: any[], options?: Options) {\n    super(options);\n  }\n\n  public buildArray<T extends AbstractControl>(controls: T[]): GrFormArray<T> {\n    const array = new GrFormArray<T>(controls, this.validators, this.asyncValidators);\n    ControlBinder.setUpSubscriptions(\n      {\n        disabled: this.disabled,\n        valueOverride: this.valueOverride\n      },\n      array\n    );\n    return array;\n  }\n}\n","import {GroupControls} from './group-controls';\nimport {FormGroup} from '@angular/forms';\n\n/**\n * GrFormGroup\n * an angular FormGroup class that provides strong typed getters for controls and value\n */\nexport class GrFormGroup<\n  ControlType extends GroupControls = GroupControls,\n  ValueType extends { [ key in keyof ControlType ]: any } = { [ key in keyof ControlType ]: any }\n  > extends FormGroup {\n\n  public get grControls(): ControlType {\n    return this.controls as ControlType;\n  }\n\n  public get grValue(): ValueType  {\n    return this.value as ValueType;\n  }\n\n}\n","import { GroupControls } from '../typed-forms/group-controls';\nimport { GrFormGroup } from '../typed-forms/gr-form-group';\nimport { ControlBinder } from '../control-binder';\nimport { GrAbstract, Options } from './abstract';\n\nexport class GrGroup extends GrAbstract {\n  public constructor(public readonly group: {[key: string]: any}, options?: Options) {\n    super(options);\n  }\n\n  public buildGroup<T extends GroupControls>(controls: T): GrFormGroup<T> {\n    const group = new GrFormGroup<T>(controls, this.validators, this.asyncValidators);\n    ControlBinder.setUpSubscriptions(\n      {\n        disabled: this.disabled,\n        valueOverride: this.valueOverride\n      },\n      group\n    );\n    return group;\n  }\n}\n","import { AbstractControl, FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { GrControl } from './build-models/control';\nimport { GrArray } from './build-models/array';\nimport { GrAbstract } from './build-models/abstract';\nimport { GrGroup } from './build-models/group';\n\nexport class GrBuilder<FORM_MODEL extends AbstractControl = AbstractControl, VALUE_MODEL = any> {\n  private readonly valuesSubject: Subject<VALUE_MODEL>;\n  private form: FORM_MODEL;\n\n  public get values$(): Observable<VALUE_MODEL> {\n    return this.valuesSubject.asObservable()\n      .pipe(distinctUntilChanged(isEqual));\n  }\n\n  public constructor() {\n    this.valuesSubject = new Subject<VALUE_MODEL>();\n  }\n\n  public buildForm(data: GrAbstract): FORM_MODEL {\n    this.form = this.recursiveBuild(data) as FORM_MODEL;\n    this.valuesSubject.next(this.form.value);\n    this.form.valueChanges.subscribe(values => this.valuesSubject.next(values));\n\n    return this.form;\n  }\n\n  public createSelector<T>(projector: (values: VALUE_MODEL, form?: FORM_MODEL) => T): Observable<T> {\n    return this.values$.pipe(\n      map((value) => projector(value, this.form)),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  private recursiveBuild(data: GrAbstract): AbstractControl {\n    if (GrControl[Symbol.hasInstance](data)) {\n      // hermes form Control\n\n      const options: GrControl = data as GrControl;\n      return options.buildControl();\n\n    } else if (GrArray[Symbol.hasInstance](data)) {\n      // hermes form array\n\n      const options: GrArray = data as GrArray;\n      return options.buildArray([...options.array].map(item => this.recursiveBuild(item)));\n\n    } else if (GrGroup[Symbol.hasInstance](data)) {\n      // hermes form group options\n\n      const options: GrGroup = data as GrGroup;\n      const controls: {[key: string]: AbstractControl} = {};\n      Object.keys(options.group).forEach(key => {\n        controls[key] = this.recursiveBuild(data[key]);\n      });\n      return options.buildGroup(controls);\n\n    } else if (Array.isArray(data)) {\n      // normal form aray witout any options\n\n      return new FormArray([...data].map(item => this.recursiveBuild(item)));\n\n    } else if (typeof data === 'object' && data !== null && data !== undefined) {\n      // normal form group without any options\n\n      const controls: {[key: string]: AbstractControl} = {};\n      Object.keys(data).forEach(key => {\n        controls[key] = this.recursiveBuild(data[key]);\n      });\n      const options: GrGroup = data as GrGroup;\n      return new FormGroup(controls);\n\n   } else {\n        // normal form control without any options\n\n        return new FormControl(data);\n    }\n  }\n}\n"]}